[{"D:\\internship\\trello\\react-material-ui\\src\\index.js":"1","D:\\internship\\trello\\react-material-ui\\src\\App.js":"2","D:\\internship\\trello\\react-material-ui\\src\\reportWebVitals.js":"3","D:\\internship\\trello\\react-material-ui\\src\\components\\NavBar.js":"4","D:\\internship\\trello\\react-material-ui\\src\\store.js":"5","D:\\internship\\trello\\react-material-ui\\src\\reducers\\index.js":"6","D:\\internship\\trello\\react-material-ui\\src\\components\\TrelloList.js":"7","D:\\internship\\trello\\react-material-ui\\src\\reducers\\listsReducer.js":"8","D:\\internship\\trello\\react-material-ui\\src\\components\\TrelloCard.js":"9","D:\\internship\\trello\\react-material-ui\\src\\components\\TrelloButton.js":"10","D:\\internship\\trello\\react-material-ui\\src\\actions\\types.js":"11","D:\\internship\\trello\\react-material-ui\\src\\actions\\listsActions.js":"12","D:\\internship\\trello\\react-material-ui\\src\\actions\\cardActions.js":"13","D:\\internship\\trello\\react-material-ui\\src\\components\\Home.js":"14","D:\\internship\\trello\\react-material-ui\\src\\components\\TrelloBoard.js":"15","D:\\internship\\trello\\react-material-ui\\src\\components\\BoardContainer.js":"16","D:\\internship\\trello\\react-material-ui\\src\\actions\\boardActions.js":"17","D:\\internship\\trello\\react-material-ui\\src\\reducers\\boardReducer.js":"18","D:\\internship\\trello\\react-material-ui\\src\\reducers\\cardReducer.js":"19","D:\\internship\\trello\\react-material-ui\\src\\components\\TrelloCreate.js":"20","D:\\internship\\trello\\react-material-ui\\src\\reducers\\currentBoardReducer.js":"21","D:\\internship\\finalAssignment\\react-material-ui\\src\\index.js":"22","D:\\internship\\finalAssignment\\react-material-ui\\src\\App.js":"23","D:\\internship\\finalAssignment\\react-material-ui\\src\\reportWebVitals.js":"24","D:\\internship\\finalAssignment\\react-material-ui\\src\\store.js":"25","D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\TrelloBoard.js":"26","D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\Home.js":"27","D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\NavBar.js":"28","D:\\internship\\finalAssignment\\react-material-ui\\src\\reducers\\index.js":"29","D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\TrelloButton.js":"30","D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\BoardContainer.js":"31","D:\\internship\\finalAssignment\\react-material-ui\\src\\actions\\listsActions.js":"32","D:\\internship\\finalAssignment\\react-material-ui\\src\\actions\\boardActions.js":"33","D:\\internship\\finalAssignment\\react-material-ui\\src\\reducers\\boardReducer.js":"34","D:\\internship\\finalAssignment\\react-material-ui\\src\\reducers\\cardReducer.js":"35","D:\\internship\\finalAssignment\\react-material-ui\\src\\reducers\\listsReducer.js":"36","D:\\internship\\finalAssignment\\react-material-ui\\src\\reducers\\currentBoardReducer.js":"37","D:\\internship\\finalAssignment\\react-material-ui\\src\\actions\\cardActions.js":"38","D:\\internship\\finalAssignment\\react-material-ui\\src\\actions\\types.js":"39","D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\TrelloList.js":"40","D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\TrelloCard.js":"41"},{"size":773,"mtime":1610119612790,"results":"42","hashOfConfig":"43"},{"size":647,"mtime":1610047343375,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":543,"mtime":1609935453156,"results":"46","hashOfConfig":"43"},{"size":611,"mtime":1610119628426,"results":"47","hashOfConfig":"43"},{"size":389,"mtime":1610044494619,"results":"48","hashOfConfig":"43"},{"size":3987,"mtime":1610115126775,"results":"49","hashOfConfig":"43"},{"size":2930,"mtime":1610118919376,"results":"50","hashOfConfig":"43"},{"size":2633,"mtime":1609967106733,"results":"51","hashOfConfig":"43"},{"size":3156,"mtime":1610119693986,"results":"52","hashOfConfig":"43"},{"size":451,"mtime":1610019364243,"results":"53","hashOfConfig":"43"},{"size":1095,"mtime":1610110561240,"results":"54","hashOfConfig":"43"},{"size":546,"mtime":1610056956047,"results":"55","hashOfConfig":"43"},{"size":646,"mtime":1610006633421,"results":"56","hashOfConfig":"43"},{"size":3485,"mtime":1610119773420,"results":"57","hashOfConfig":"43"},{"size":2867,"mtime":1610060173132,"results":"58","hashOfConfig":"43"},{"size":569,"mtime":1610056320595,"results":"59","hashOfConfig":"43"},{"size":813,"mtime":1610044906786,"results":"60","hashOfConfig":"43"},{"size":975,"mtime":1610056536151,"results":"61","hashOfConfig":"43"},{"size":4174,"mtime":1610094571356,"results":"62","hashOfConfig":"43"},{"size":297,"mtime":1610044894909,"results":"63","hashOfConfig":"43"},{"size":773,"mtime":1610119612790,"results":"64","hashOfConfig":"65"},{"size":716,"mtime":1610306258823,"results":"66","hashOfConfig":"65"},{"size":362,"mtime":499162500000,"results":"67","hashOfConfig":"65"},{"size":611,"mtime":1610119628426,"results":"68","hashOfConfig":"65"},{"size":3159,"mtime":1610345199037,"results":"69","hashOfConfig":"65"},{"size":646,"mtime":1610006633421,"results":"70","hashOfConfig":"65"},{"size":543,"mtime":1609935453156,"results":"71","hashOfConfig":"65"},{"size":388,"mtime":1610129563677,"results":"72","hashOfConfig":"65"},{"size":2866,"mtime":1610347277289,"results":"73","hashOfConfig":"65"},{"size":2867,"mtime":1610060173132,"results":"74","hashOfConfig":"65"},{"size":1890,"mtime":1610297376471,"results":"75","hashOfConfig":"65"},{"size":529,"mtime":1610305336205,"results":"76","hashOfConfig":"65"},{"size":813,"mtime":1610044906786,"results":"77","hashOfConfig":"65"},{"size":1097,"mtime":1610346617618,"results":"78","hashOfConfig":"65"},{"size":3672,"mtime":1610298159900,"results":"79","hashOfConfig":"65"},{"size":297,"mtime":1610044894909,"results":"80","hashOfConfig":"65"},{"size":610,"mtime":1610347303948,"results":"81","hashOfConfig":"65"},{"size":465,"mtime":1610343211594,"results":"82","hashOfConfig":"65"},{"size":4534,"mtime":1610346991378,"results":"83","hashOfConfig":"65"},{"size":2773,"mtime":1610343689813,"results":"84","hashOfConfig":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},"flbsfo",{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"138"},"1cbtqtk",{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"138"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"138"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"138"},"D:\\internship\\trello\\react-material-ui\\src\\index.js",["179"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n <Provider store={store}>\n    \n      <HashRouter>\n        <App />\n      </HashRouter>\n    \n  </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["180","181"],"D:\\internship\\trello\\react-material-ui\\src\\App.js",["182","183"],"import React, { Component } from 'react';\r\n\r\nimport { Switch, Route,Redirect } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport _ from \"lodash\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport TrelloBoard from \"./components/TrelloBoard\";\r\nimport Home from './components/Home';\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n  \r\n      <div>\r\n        <NavBar/>\r\n        <Switch>\r\n            <Route path=\"/boards/:boardID\" component={TrelloBoard} />\r\n        \r\n            <Route path=\"/home\" component={Home} />\r\n            <Redirect from=\"/\" to=\"/home\" />\r\n          </Switch>\r\n       \r\n      </div>\r\n  \r\n  \r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","D:\\internship\\trello\\react-material-ui\\src\\reportWebVitals.js",[],"D:\\internship\\trello\\react-material-ui\\src\\components\\NavBar.js",["184"],"import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typograpy from '@material-ui/core/Typography';\r\n\r\n const NavBar = () => {\r\n    return(\r\n        <div>\r\n            <AppBar position=\"static\" className=\"menu_color\" >\r\n                <Toolbar>\r\n                    <Typograpy variant=\"title\" color=\"inherit\"><h2>VisionX-Trello</h2></Typograpy>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;\r\n","D:\\internship\\trello\\react-material-ui\\src\\store.js",[],"D:\\internship\\trello\\react-material-ui\\src\\reducers\\index.js",[],"D:\\internship\\trello\\react-material-ui\\src\\components\\TrelloList.js",["185","186","187","188"],"// import React, { Component, useState } from \"react\";\r\n// import _ from \"lodash\";\r\n// import \"../styles.css\";\r\n// import { connect } from \"react-redux\";\r\n// import TrelloCard from \"./TrelloCard\";\r\n// //import TrelloButton from \"./TrelloButton\";\r\n// import TrelloCreate from \"./TrelloCreate\";\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n// import { Droppable, Draggable } from \"react-beautiful-dnd\";\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nimport React, { Component ,useState} from \"react\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloCard from \"./TrelloCard\";\r\nimport TrelloButton from \"./TrelloButton\";\r\nimport \"../styles.css\";\r\nimport {Droppable,Draggable} from \"react-beautiful-dnd\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst TrelloList = ({ title, cards, listID ,index,dispatch}) => {\r\n  debugger;\r\n  console.log(\"trelloList\",title);\r\n  console.log(\"cards\",cards);\r\n  console.log(\"listID\",listID);\r\n  console.log(\"index\",index);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [listTitle, setListTitle] = useState(title);\r\n  const renderEditInput = () => {\r\n    return (\r\n      <form onSubmit={handleFinishEditing}>\r\n        <input\r\n          type=\"text\"\r\n          value={listTitle}\r\n          onChange={handleChange}\r\n          autoFocus\r\n          onFocus={handleFocus}\r\n          \r\n        />\r\n      </form>\r\n    );\r\n  };\r\n  const handleFinishEditing = e => {\r\n    setIsEditing(false);\r\n    alert(\"please edit\");\r\n    //dispatch(editTitle(listID, listTitle));\r\n  };\r\n  const handleFocus = e => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setListTitle(e.target.value);\r\n  };\r\n\r\n  return (\r\n\r\n    //ref used to point to the dom node\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n    {provided => (\r\n      <div className=\"container\"\r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        ref={provided.innerRef}\r\n      >\r\n        <Droppable droppableId={String(listID)} type=\"card\">\r\n          {provided => (\r\n            <div>\r\n              <div>\r\n                {isEditing ? (\r\n                  renderEditInput()\r\n                ) : (\r\n                  <div className=\"titleContainer\" onClick={() => setIsEditing(true)}>\r\n                    <h3>{listTitle}</h3>\r\n                    <Button>\r\n                      delete\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                {cards.map((card, index) => (\r\n                  <TrelloCard\r\n                    key={card.id}\r\n                    text={card.text}\r\n                    id={card.id}\r\n                    index={index}\r\n                    listID={listID}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}\r\n                {/* <TrelloCreate listID={listID} /> */}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    )}\r\n  </Draggable>\r\n    \r\n  );\r\n};\r\n\r\nexport default connect()(TrelloList);\r\n\r\n\r\n\r\n{/* <Draggable draggableId={String(listID)} index={index}>\r\n    {\r\n      provided=>(\r\n<div className=\"container\"\r\n       {...provided.draggableProps}\r\n       ref={provided.innerRef}\r\n       {...provided.dragHandleProps}\r\n       >\r\n      <Droppable droppableId={String(listID)} >\r\n      {provided=>(\r\n       \r\n         <div  {...provided.droppableProps}\r\n         ref={provided.innerRef}>\r\n      <h3>{title}</h3>\r\n   \r\n          {\r\n            cards.map((card,index)=>\r\n            <TrelloCard \r\n            key={card.id}\r\n            index={index}\r\n            text={card.text}\r\n            id={card.id}\r\n            />\r\n            )} \r\n      <TrelloButton listID={listID} />\r\n      {provided.placeholder}\r\n    </div>\r\n      )}\r\n    </Droppable>\r\n    </div>\r\n      )\r\n    }\r\n\r\n    </Draggable> */}\r\n\r\n\r\n\r\n","D:\\internship\\trello\\react-material-ui\\src\\reducers\\listsReducer.js",["189","190","191"],"import { CONSTANTS } from \"./../actions/types\";\r\nlet listID = 2;\r\n  let   cardID = 6;\r\n\r\nconst initialState = {\r\n  \"list-00\": {\r\n    listID: \"list-00\",\r\n    cards: [\"card-00\"],\r\n    listTitle: \"myList\",\r\n    boardID: \"board-00\",\r\n  },\r\n};\r\n\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n  debugger;\r\n  switch (action.type) {\r\n    \r\n    case CONSTANTS.ADD_LIST: {\r\n      const { listTitle, listID, boardID } = action.payload;\r\n      const newList = {\r\n        listTitle,\r\n        listID,\r\n        cards: [],\r\n        boardID,\r\n      };\r\n      \r\n      //return [...state, newList];\r\n      return {...state, [listID]: newList };\r\n    }\r\n    //  case CONSTANTS.ADD_CARD: {\r\n    //   const { listID, cardID } = action.payload;\r\n    //   const list = state[listID];\r\n    //   list.cards.push(cardID);\r\n    //   return { ...state, [listID]: list };\r\n    // }\r\n    // case CONSTANTS.ADD_CARD: {\r\n    //   const newCard = {\r\n    //     text: action.payload.text,\r\n    //     id: `card-$[cardID]`,\r\n    //   };\r\n    //   cardID += 1;\r\n    //   console.log(\"recieved\", action);\r\n    //   const newState = state.map((list) => {\r\n    //     if (list.id === action.payload.listID) {\r\n    //       return {\r\n    //         ...list,\r\n    //         cards: [...list.cards, newCard],\r\n    //       };\r\n    //     } else {\r\n    //       return list;\r\n    //     }\r\n    //   });\r\n\r\n    //   return newState;\r\n    // }\r\n    case CONSTANTS.DRAG_CARD:\r\n      const {\r\n        droppableStart,\r\n        droppableEnd,\r\n        droppableIndexStart,\r\n        droppableIndexEnd,\r\n        draggableId,\r\n        type\r\n      } = action.payload;\r\n      const newState = [...state];\r\n\r\n      if(type===\"list\")\r\n      {\r\n        //grab the list from newState. newState is an array of list\r\n        const pickListBox=newState.splice(droppableIndexStart,1);\r\n        newState.splice(droppableIndexEnd,0,...pickListBox);\r\n        return newState;\r\n      }\r\n      //in same list\r\n      if (droppableStart === droppableEnd) {\r\n        \r\n        const list = state.find((list) => droppableStart === list.id);\r\n        //from droppableIndexEnd we need to remove one item\r\n        const card = list.cards.splice(droppableIndexStart, 1); \r\n    \r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n\r\n      if(droppableStart !== droppableEnd)\r\n      {\r\n        //other list in which we need to move\r\n        const nextListStart=state.find((list) => droppableStart === list.id);\r\n        //find the list from where card is dragged\r\n        const card =nextListStart.cards.splice(droppableIndexStart,1);\r\n        //find the list where dragged item will be placed\r\n        const nextListEnd=state.find((list=>droppableEnd===list.id));\r\n        //put the card in the new list\r\n        nextListEnd.cards.splice(droppableIndexEnd,0,...card);\r\n      }\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default listsReducer;\r\n","D:\\internship\\trello\\react-material-ui\\src\\components\\TrelloCard.js",["192","193","194"],"import React, { Component,useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"../styles.css\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport { connect } from \"react-redux\";\r\nimport {editCard,deleteCard} from \"../actions/cardActions\";\r\n\r\n// const DeleteButton = styled(Icon)`\r\n//   position: absolute;\r\n//   display: none;\r\n//   right: 5px;\r\n//   bottom: 5px;\r\n//   opacity: 0.5;\r\n//   ${CardContainer}:hover & {\r\n//     display: block;\r\n//     cursor: pointer;\r\n//   }\r\n//   &:hover {\r\n//     opacity: 0.8;\r\n//   }\r\n// `;\r\nexport const TrelloCard = ({ text, id, index,listID,dispatch }) => {\r\n  \r\n  const [edittingCard, setEdittingCard] = useState(\"\");\r\n  const handleEditCard=(e)=>\r\n  {\r\n    debugger;\r\n    setEdittingCard(true);\r\n  //  listTitle=\"anum\";\r\n   // dispatch(editCard(id, text));\r\n  }\r\n\r\n\r\nconst handleDeleteCard = (e) => {\r\n  dispatch(deleteCard(id, listID));\r\n};\r\n  return (\r\n    <Draggable draggableId={String(id)} index={index}>\r\n      {provided => (\r\n        <div \r\n        ref={provided.innerRef}\r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        className=\"cardContainer\">\r\n          <Card>\r\n            <CardContent>\r\n              <Typography gutterBottom className=\"textFont\">\r\n                {text}\r\n              </Typography>\r\n            </CardContent>\r\n            <Divider variant=\"middle\" />\r\n            <CardActions className=\"MuiCardActions-root\">\r\n           \r\n            <Button size=\"small\" className=\"btnSize\"  color=\"primary\" variant=\"contained\" startIcon={<EditIcon/>} onClick={handleEditCard}>Edit</Button>\r\n            <Button size=\"small\" className=\"btnColorPurple btnSize\" variant=\"contained\" startIcon={<FileCopy/>} onClick={handleEditCard}>Copy</Button>\r\n            <Button size=\"small\" className=\"btnSize\" color=\"secondary\" variant=\"contained\" startIcon={<DeleteIcon />} onClick={handleDeleteCard}>Delete</Button>\r\n            \r\n             \r\n            </CardActions>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps=dispatch=>\r\n// {\r\n//   deleteCard:key=>dispatch(deleteCard(id));\r\n// }\r\nexport default connect()(TrelloCard);\r\n","D:\\internship\\trello\\react-material-ui\\src\\components\\TrelloButton.js",["195","196"],"D:\\internship\\trello\\react-material-ui\\src\\actions\\types.js",[],"D:\\internship\\trello\\react-material-ui\\src\\actions\\listsActions.js",[],"D:\\internship\\trello\\react-material-ui\\src\\actions\\cardActions.js",[],"D:\\internship\\trello\\react-material-ui\\src\\components\\Home.js",[],"D:\\internship\\trello\\react-material-ui\\src\\components\\TrelloBoard.js",["197","198","199","200","201"],"D:\\internship\\trello\\react-material-ui\\src\\components\\BoardContainer.js",["202"],"import React, { Component, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {addBoard,setCurrentBoard,deleteBoard} from \"../actions/boardActions\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nconst BoardContainer = ({ boards, dispatch, match }) => {\r\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\r\n  dispatch(setCurrentBoard(null));\r\n  const handleChange = (e) => {\r\n    if (e.target.value.length < 15) {\r\n      setNewBoardTitle(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addBoard(newBoardTitle));\r\n    setNewBoardTitle(\"\");\r\n  };\r\n\r\n  const handleDeleteBoard = (e, boardID) => {\r\n    // console.log(\"KKBoard: delete board: \", boardID);\r\n    dispatch(deleteBoard(boardID));\r\n  };\r\n  const renderCreateNewBoard = () => {\r\n    return (\r\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\r\n        <h3>Create new Board</h3>\r\n        <input\r\n          className=\"createInput\"\r\n          onChange={handleChange}\r\n          value={newBoardTitle}\r\n          placeholder={\"Enter title and Hit enter\"}\r\n          type=\"text\"\r\n        />\r\n        {\"  \"}\r\n        <Button className=\"creatButton\" type=\"submit\">\r\n          Create Board\r\n        </Button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const renderListOfBoards = () => {\r\n    \r\n\r\n  \r\n\r\n    return Object.entries(boards).map(([boardID, board]) => {\r\n      return (\r\n        <div className=\"thumbNail\">\r\n          <div className=\"thumbNails\">\r\n            <a\r\n            \r\n            href={`#/boards/${boardID}`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              fontSize:\"30px\",\r\n              color:\"black !important\" ,\r\n              textDecoration: \"none\",\r\n              textAlign: \"center\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n            \r\n            \r\n            >{board.boardTitle}</a>\r\n          </div>\r\n          {/* maximum update depth incraeses thts why created call back */}\r\n          <DeleteIcon\r\n            size=\"larger\"\r\n            color=\"secondary\"\r\n            onClick={(e) => handleDeleteBoard(e, boardID)}\r\n          />\r\n\r\n          {/* <Button size=\"small\" className=\"btnSize\" color=\"secondary\" variant=\"contained\"  color=\"secondary\"\r\n        onClick={(e)=>handleDeleteBoard(e,boardID)} startIcon={<DeleteIcon />}>\r\n        Delete</Button> */}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"boardContainer\">\r\n      {renderCreateNewBoard()}\r\n      <div className=\"thumbNails\">{renderListOfBoards()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boards: state.boards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BoardContainer);\r\n","D:\\internship\\trello\\react-material-ui\\src\\actions\\boardActions.js",[],"D:\\internship\\trello\\react-material-ui\\src\\reducers\\boardReducer.js",[],"D:\\internship\\trello\\react-material-ui\\src\\reducers\\cardReducer.js",[],"D:\\internship\\trello\\react-material-ui\\src\\components\\TrelloCreate.js",["203","204"],"import React, { useState } from \"react\";\r\nimport \"../styles.css\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList } from \"../actions/listsActions\";\r\nimport { addCard } from \"../actions/cardActions\";\r\nexport const TrelloCreate = (props) => {\r\n  // const { text } = state;\r\n  const { list } = props;\r\n  const [formOpen, setFormOpen] = useState(false);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const { dispatch } = props;\r\n  const openForm = () => {\r\n    setFormOpen(true);\r\n  };\r\n  const closeForm = (e) => {\r\n    e.preventDefault();\r\n    setFormOpen(false);\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    if (e.target.value === \"\") {\r\n      setUserInput(\"\");\r\n    } else {\r\n      setUserInput(e.target.value);\r\n    }\r\n  };\r\n\r\n\r\n const handleAddList = (e) => {\r\n     alert(\"heloo\");\r\n    console.log(\"addtile\",e.target.value);\r\n    \r\n    setUserInput(e.target.value);\r\n    if (userInput) {\r\n        // setUserInput(\"\");\r\n        dispatch(addList(userInput));\r\n      }\r\n      alert(\"list\");\r\n      return;\r\n  };\r\n\r\n//  const handleAddCard = () => {\r\n//     const { dispatch, listID } = props;\r\n//     if (userInput) {\r\n//         setUserInput(\"\");\r\n//         dispatch(addCard(listID,userInput));\r\n//       }\r\n//   };\r\n \r\n\r\n  \r\n\r\n  if (list) {\r\n    const { list } = props;\r\n    const placeholder = list ? \"Enter a  Title\" : \"Enter a Card Title...\";\r\n    const buttonTitle = list ? \"Add Title\" : \"Add Card\";\r\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n    // const buttonTextOpacity = list ? 1 : 0.5;\r\n    // const buttonTextColor = list ? \"white\" : \"inherit\";\r\n    // const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n    if (formOpen) \r\n     \r\n      return (\r\n        <div className=\"container\">\r\n          <Card className=\"cardTextArea\">\r\n            <Textarea\r\n              className=\"textBox\"\r\n              placeholder={placeholder}\r\n              autoFocus\r\n              onBlur={closeForm}\r\n              value={userInput}\r\n              onChange={handleInput}\r\n            ></Textarea>\r\n          </Card>\r\n          <div>\r\n    \r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"btnColorGreen\"\r\n              onMouseDown={handleAddList}\r\n            >\r\n              {buttonTitle}{\" \"}\r\n            </Button>\r\n          \r\n          </div>\r\n        </div>\r\n      );\r\n     else \r\n      return (\r\n        <div className=\"buttonGroup\" \r\n            >\r\n           <Button size=\"small\" className=\"btnSize btnColorOrange\"  onClick={openForm}\r\n        startIcon={<AddCircleRoundedIcon  />} \r\n     >{buttonText}</Button>\r\n        </div>\r\n       \r\n        \r\n      );\r\n    \r\n  }\r\n   else\r\n   alert(\"help me\");\r\n//     {\r\n//     const placeholder = list ? \"Enter a  Title\" : \"Enter a Card Title...\";\r\n//     const buttonTitle = list ? \"Add Title\" : \"Add Card\";\r\n//     const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n   \r\n//     alert(\"add card\");\r\n//       if (formOpen)\r\n//         return (\r\n           \r\n//         <div className=\"container\">\r\n//         <Card className=\"cardTextArea\">\r\n//         <Textarea\r\n//           className=\"textBox\"\r\n//           placeholder={placeholder}\r\n//           autoFocus\r\n//         //   onBlur={closeForm}\r\n//           value={userInput}\r\n//           onChange={handleInput}\r\n//         ></Textarea>\r\n//       </Card>\r\n//       <div>\r\n//         <Button\r\n//           variant=\"contained\"\r\n//           className=\"btnColorGreen\"\r\n//           onClick={handleAddCard}\r\n//         >\r\n//           {buttonTitle}{\" \"}\r\n//         </Button>\r\n//       </div>\r\n//     </div>\r\n\r\n//         );\r\n//       else\r\n//        return \r\n//        <div className=\"buttonGroup\" \r\n//        >\r\n//       <Button size=\"small\" className=\"btnSize btnColorOrange\"  onClick={openForm}\r\n// >{buttonText}</Button>\r\n//    </div>\r\n      \r\n//   }\r\n};\r\n\r\nexport default connect()(TrelloCreate);\r\n","D:\\internship\\trello\\react-material-ui\\src\\reducers\\currentBoardReducer.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\index.js",["205"],["206","207"],"D:\\internship\\finalAssignment\\react-material-ui\\src\\App.js",["208","209","210","211"],"D:\\internship\\finalAssignment\\react-material-ui\\src\\reportWebVitals.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\store.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\TrelloBoard.js",["212","213","214"],"import React, { Component, useEffect } from \"react\";\r\n//import './App.css';\r\nimport \"../styles.css\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloList from \"../components/TrelloList\";\r\nimport TrelloButton from \"../components/TrelloButton\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { sortCardsOrder } from \"../actions/listsActions\";\r\nimport { setCurrentBoard } from \"../actions/boardActions\";\r\n\r\nconst TrelloBoard = (props) => {\r\n  const { boardID } = props.match.params;\r\n  useEffect(() => {\r\n    const { boardID } = props.match.params;\r\n\r\n    props.dispatch(setCurrentBoard(boardID));\r\n  }, [boardID]);\r\n\r\n  //synchronously update the drag and drop state\r\n  const onDragEnd = (result) => {\r\n    debugger;\r\n    //rendering logic\r\n    // destination and source objects contains the infor  that where the draggable  started and where it is ended\r\n    const { destination, source, draggableId, type } = result;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    props.dispatch(\r\n      sortCardsOrder(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n  const { lists, cards, boards } = props;\r\n\r\n  const board = boards[boardID];\r\n  const mergeList = _.assign(boards[boardID].lists, lists);\r\n  //const mergeCards=_.merge(boards[boardID].lists[cards],cards);\r\n\r\n  if (!board) return <h1 style={{ textAlign: \"center\" }}>Board not found!</h1>;\r\n  const listOrder = _.values(mergeList);\r\n  // const cardOrder=_.values(mergeCards);\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <h2>{board.boardTitle}</h2>\r\n      <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n        {(provided) => (\r\n          <div\r\n            className=\"listContainer\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {Object.keys(listOrder).map((key, index) => {\r\n              const list = listOrder[key];\r\n\r\n              console.log(\"object keys list\", list);\r\n\r\n              if (list) {\r\n                const listCards = Object.keys(cards).map((key) => cards[key]);\r\n                console.log(\"object keys cards\", listCards[key]);\r\n\r\n                // const listCards = list.cards.map((cardID) => cards[cardID]);\r\n                return (\r\n                  <TrelloList\r\n                    key={listOrder[key].listID}\r\n                    listID={listOrder[key].listID}\r\n                    title={listOrder[key].listTitle}\r\n                    cards={listCards}\r\n                    index={index}\r\n                    boardID={boardID}\r\n                  />\r\n                );\r\n              }\r\n            })}\r\n\r\n            {provided.placeholder}\r\n\r\n            <TrelloButton list boardID />\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boards: state.boards,\r\n  currentBoard: state.currentBoard,\r\n  lists: state.lists,\r\n  cards: state.cards,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TrelloBoard);\r\n","D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\Home.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\NavBar.js",["215"],"D:\\internship\\finalAssignment\\react-material-ui\\src\\reducers\\index.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\TrelloButton.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\BoardContainer.js",["216"],"D:\\internship\\finalAssignment\\react-material-ui\\src\\actions\\listsActions.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\actions\\boardActions.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\reducers\\boardReducer.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\reducers\\cardReducer.js",["217","218"],"D:\\internship\\finalAssignment\\react-material-ui\\src\\reducers\\listsReducer.js",["219","220","221","222"],"D:\\internship\\finalAssignment\\react-material-ui\\src\\reducers\\currentBoardReducer.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\actions\\cardActions.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\actions\\types.js",[],"D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\TrelloList.js",["223","224","225"],"D:\\internship\\finalAssignment\\react-material-ui\\src\\components\\TrelloCard.js",["226","227"],"import React, { Component,useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"../styles.css\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { connect } from \"react-redux\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport {editCard,deleteCard} from \"../actions/cardActions\";\r\n\r\nexport const TrelloCard =React.memo( ({ text, cardID,index,listID,dispatch }) => {\r\n  console.log(\"id passed on trello card\",cardID);\r\n  const [edittingCard, setEdittingCard] = useState(\"\");\r\n  const [cardText, setText] = useState(text);\r\n  const closeForm = (e) => {\r\n    setEdittingCard(false);\r\n    setText(text);\r\n  };\r\n\r\n  const handleCardInputChange = (e) => {\r\n    \r\n    setText(e.target.value);\r\n  };\r\n\r\n  const saveCard = (e) => {\r\n  \r\n    e.preventDefault();\r\n    \r\n  dispatch(editCard(cardID, listID, cardText));\r\n    setEdittingCard(false);\r\n  };\r\n \r\n\r\nconst handleDeleteCard = (e) => {\r\n\r\n dispatch(deleteCard(cardID, listID));\r\n};\r\n\r\n\r\nif (edittingCard)\r\nreturn (\r\n  <div>\r\n  <Card className=\"cardTextArea\">\r\n  <Textarea\r\n    className=\"textBox\"\r\n    type=\"text\"\r\n    autoFocus\r\n    \r\n    value={cardText}\r\n    onChange={handleCardInputChange}\r\n  ></Textarea>\r\n</Card>\r\n    <Button text=\"Save\" onMouseDown={saveCard} variant=\"contained\">Save</Button>\r\n  </div>\r\n);\r\n  return (\r\n    <Draggable draggableId={String(cardID)} index={index}>\r\n      {provided => (\r\n        <div \r\n        ref={provided.innerRef}\r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        className=\"cardContainer\">\r\n          <Card>\r\n            <CardContent>\r\n              <Typography gutterBottom className=\"textFont\">\r\n                {text} \r\n              </Typography>\r\n            </CardContent>\r\n            <Divider variant=\"middle\" />\r\n            <CardActions className=\"MuiCardActions-root\">\r\n           \r\n            <Button size=\"small\" className=\"btnSize\"  color=\"primary\" \r\n            variant=\"contained\" startIcon={<EditIcon/>}  onMouseDown={() => setEdittingCard(true)}>Edit</Button>\r\n            <Button size=\"small\" className=\"btnSize\" color=\"secondary\"\r\n             variant=\"contained\" startIcon={<DeleteIcon />} onMouseDown={handleDeleteCard}>Delete</Button>\r\n            \r\n             \r\n            </CardActions>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n});\r\n\r\n\r\nexport default connect()(TrelloCard);\r\n",{"ruleId":"228","severity":1,"message":"229","line":8,"column":10,"nodeType":"230","messageId":"231","endLine":8,"endColumn":21},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"228","severity":1,"message":"236","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"237","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":9},{"ruleId":"228","severity":1,"message":"236","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"236","line":13,"column":17,"nodeType":"230","messageId":"231","endLine":13,"endColumn":26},{"ruleId":"228","severity":1,"message":"237","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":9},{"ruleId":"228","severity":1,"message":"238","line":17,"column":8,"nodeType":"230","messageId":"231","endLine":17,"endColumn":20},{"ruleId":"239","severity":1,"message":"240","line":111,"column":1,"nodeType":"241","messageId":"242","endLine":144,"endColumn":21},{"ruleId":"228","severity":1,"message":"243","line":2,"column":5,"nodeType":"230","messageId":"231","endLine":2,"endColumn":11},{"ruleId":"228","severity":1,"message":"244","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":15},{"ruleId":"228","severity":1,"message":"245","line":63,"column":9,"nodeType":"230","messageId":"231","endLine":63,"endColumn":20},{"ruleId":"228","severity":1,"message":"236","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"246","line":14,"column":9,"nodeType":"230","messageId":"231","endLine":14,"endColumn":17},{"ruleId":"228","severity":1,"message":"247","line":32,"column":10,"nodeType":"230","messageId":"231","endLine":32,"endColumn":22},{"ruleId":"228","severity":1,"message":"248","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":28},{"ruleId":"228","severity":1,"message":"249","line":86,"column":122,"nodeType":"230","messageId":"231","endLine":86,"endColumn":133},{"ruleId":"228","severity":1,"message":"236","line":2,"column":17,"nodeType":"230","messageId":"231","endLine":2,"endColumn":26},{"ruleId":"228","severity":1,"message":"237","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":9},{"ruleId":"250","severity":1,"message":"251","line":23,"column":5,"nodeType":"252","endLine":23,"endColumn":7,"suggestions":"253"},{"ruleId":"228","severity":1,"message":"254","line":47,"column":11,"nodeType":"230","messageId":"231","endLine":47,"endColumn":16},{"ruleId":"255","severity":1,"message":"256","line":86,"column":64,"nodeType":"257","messageId":"258","endLine":86,"endColumn":66},{"ruleId":"228","severity":1,"message":"236","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"259","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":12},{"ruleId":"228","severity":1,"message":"260","line":10,"column":10,"nodeType":"230","messageId":"231","endLine":10,"endColumn":17},{"ruleId":"228","severity":1,"message":"229","line":8,"column":10,"nodeType":"230","messageId":"231","endLine":8,"endColumn":21},{"ruleId":"232","replacedBy":"261"},{"ruleId":"234","replacedBy":"262"},{"ruleId":"228","severity":1,"message":"236","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"237","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":9},{"ruleId":"228","severity":1,"message":"263","line":6,"column":10,"nodeType":"230","messageId":"231","endLine":6,"endColumn":25},{"ruleId":"228","severity":1,"message":"264","line":6,"column":27,"nodeType":"230","messageId":"231","endLine":6,"endColumn":36},{"ruleId":"228","severity":1,"message":"236","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"250","severity":1,"message":"251","line":18,"column":6,"nodeType":"252","endLine":18,"endColumn":15,"suggestions":"265"},{"ruleId":"255","severity":1,"message":"266","line":60,"column":54,"nodeType":"257","messageId":"267","endLine":60,"endColumn":56},{"ruleId":"228","severity":1,"message":"236","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"236","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"243","line":27,"column":23,"nodeType":"230","messageId":"231","endLine":27,"endColumn":29},{"ruleId":"228","severity":1,"message":"243","line":39,"column":23,"nodeType":"230","messageId":"231","endLine":39,"endColumn":29},{"ruleId":"228","severity":1,"message":"243","line":40,"column":15,"nodeType":"230","messageId":"231","endLine":40,"endColumn":21},{"ruleId":"228","severity":1,"message":"268","line":40,"column":23,"nodeType":"230","messageId":"231","endLine":40,"endColumn":35},{"ruleId":"228","severity":1,"message":"269","line":47,"column":23,"nodeType":"230","messageId":"231","endLine":47,"endColumn":30},{"ruleId":"228","severity":1,"message":"245","line":61,"column":9,"nodeType":"230","messageId":"231","endLine":61,"endColumn":20},{"ruleId":"228","severity":1,"message":"236","line":2,"column":17,"nodeType":"230","messageId":"231","endLine":2,"endColumn":26},{"ruleId":"228","severity":1,"message":"237","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":9},{"ruleId":"239","severity":1,"message":"240","line":129,"column":1,"nodeType":"241","messageId":"242","endLine":162,"endColumn":21},{"ruleId":"228","severity":1,"message":"236","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"270","line":20,"column":9,"nodeType":"230","messageId":"231","endLine":20,"endColumn":18},"no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","no-native-reassign",["271"],"no-negated-in-lhs",["272"],"'Component' is defined but never used.","'_' is defined but never used.","'TrelloButton' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'listID' is assigned a value but never used.","'cardID' is assigned a value but never used.","'draggableId' is assigned a value but never used.","'editCard' is defined but never used.","'edittingCard' is assigned a value but never used.","'AddCircleRoundedIcon' is defined but never used.","'handleInput' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["273"],"'match' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Icon' is defined but never used.","'addCard' is defined but never used.",["271"],["272"],"'DragDropContext' is defined but never used.","'Droppable' is defined but never used.",["274"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'newListTitle' is assigned a value but never used.","'boardID' is assigned a value but never used.","'closeForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [props]",{"range":"279","text":"280"},"Update the dependencies array to be: [boardID, props]",{"range":"281","text":"282"},[660,662],"[props]",[660,669],"[boardID, props]"]